---
# tasks file for symfony2
- name: Create the release {{symfony2_project_release}} directory.
  file: state=directory path={{symfony2_project_root}}/releases/{{symfony2_project_release}} owner={{server_owner}} group={{server_group}}

- name: Create the shared directory.
  file: state=directory path={{symfony2_project_root}}/shared owner={{server_owner}} group={{server_group}}

- name: Create the shared/app/config directory.
  file: state=directory path={{symfony2_project_root}}/shared/app/config owner={{server_owner}} group={{server_group}}

- name: Create the shared/web/uploads directory.
  file: state=directory path={{symfony2_project_root}}/shared/web/uploads owner={{server_owner}} group={{server_group}}

- name: Create the shared/app/logs directory.
  file: state=directory path={{symfony2_project_root}}/shared/app/logs owner={{server_owner}} group={{server_group}}

- name: Pull sources from the repository.
  git: repo={{symfony2_project_repo}} dest={{symfony2_project_root}}/releases/{{symfony2_project_release}} version={{symfony2_project_branch}}

- name: Check if shared/app/config/parameters.yml exists
  stat: path={{symfony2_project_root}}/shared/app/config/parameters.yml
  register: parameters_yml

- name: Create symlink for app/config/parameters.yml from shared directory
  shell: ln -s {{symfony2_project_root}}/shared/app/config/parameters.yml {{symfony2_project_root}}/releases/{{symfony2_project_release}}/app/config/parameters.yml creates={{symfony2_project_root}}/releases/{{symfony2_project_release}}/app/config/parameters.yml
  when: parameters_yml.stat.exists

- name: Create app/logs symlink
  file: state=link src={{symfony2_project_root}}/shared/app/logs path={{symfony2_project_root}}/releases/{{symfony2_project_release}}/app/logs

- name: Create web/uploads symlink
  file: state=link src={{symfony2_project_root}}/shared/web/uploads path={{symfony2_project_root}}/releases/{{symfony2_project_release}}/web/uploads

- name: Install composer
  get_url: url=https://getcomposer.org/composer.phar dest={{symfony2_project_root}}/composer.phar mode=0755 validate_certs=no

- name: Run composer install
  shell: cd {{symfony2_project_root}}/releases/{{symfony2_project_release}} && {{symfony2_project_php_path}} {{symfony2_project_root}}/composer.phar install {{symfony2_project_composer_opts}}

- name: Install packages based on package.json.
  npm: path={{symfony2_project_root}}/releases/{{symfony2_project_release}}
  when: project_has_npm

- name: Do bower install
  shell: cd {{symfony2_project_root}}/releases/{{symfony2_project_release}} && bower install {{bower_console_opts}}
  when: project_has_bower

- name: Run Grunt
  shell: cd {{symfony2_project_root}}/releases/{{symfony2_project_release}} && grunt {{node_grunt_task}} {{node_grunt_opts}}
  when: project_has_grunt

- name: Dump assets
  shell: cd {{symfony2_project_root}}/releases/{{symfony2_project_release}} && {{symfony2_project_php_path}} app/console assetic:dump --env={{symfony2_project_env}} {{symfony2_project_console_opts}}

- name: Run migrations
  shell: cd {{symfony2_project_root}}/releases/{{symfony2_project_release}} && if $(grep doctrine-migrations-bundle composer.json); then {{symfony2_project_php_path}} app/console doctrine:migrations:migrate -n; fi

- name: Create symlink
  file: state=link src={{symfony2_project_root}}/releases/{{symfony2_project_release}} path={{symfony2_project_root}}/current